{"version":3,"sources":["App.jsx","index.js"],"names":["App","state","color","red","green","blue","handleClick","r","Math","floor","random","g","b","setState","rangeInput","e","rangeValue","target","value","rangeId","id","prev","handleKeyDown","event","keyboardKey","key","inputId","inputValue","test","length","slice","rgb","this","style","backgroundColor","type","onKeyDown","onChange","onClick","min","max","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7992f36f.chunk.js","sourcesContent":["import React from 'react';\n\nclass App extends React.Component {\n  state = {\n    color: {\n      red: 0,\n      green: 0,\n      blue: 0,\n    },\n  };\n  handleClick = () => {\n    const r = Math.floor(Math.random() * 255);\n    const g = Math.floor(Math.random() * 255);\n    const b = Math.floor(Math.random() * 255);\n    this.setState({ color: { red: `${r}`, green: `${g}`, blue: `${b}`} });\n  };\n  rangeInput = (e) => {\n    const rangeValue = e.target.value;\n    const rangeId = e.target.id;\n    if (rangeId === \"red\") {\n      this.setState(prev => {\n        return { color: { red: `${rangeValue}`, green: `${prev.color.green}`, blue: `${prev.color.blue}` } }\n      });\n    } else if (rangeId === \"green\") {\n      this.setState(prev => {\n        return { color: { red: `${prev.color.red}`, green: `${rangeValue}`, blue: `${prev.color.blue}` } }\n      });\n    } else {\n      this.setState(prev => {\n        return { color: { red: `${prev.color.red}`, green: `${prev.color.green}`, blue: `${rangeValue}` } }\n      });\n    }\n  };\n  handleKeyDown = (event) => {\n    const keyboardKey = event.key;\n    const inputId = event.target.id;\n    const inputValue = event.target.value;\n    if (/[0-9]/.test(keyboardKey)) {\n      if (inputValue.length < 3) {\n        if (inputId === \"enterRed\") {\n          this.setState(prev => {\n            return { color: { red: `${prev.color.red + keyboardKey}`, green: `${prev.color.green}`, blue: `${prev.color.blue}` }}\n          })\n        } else if (inputId === \"enterGreen\") {\n          this.setState(prev => {\n            return { color: { red: `${prev.color.red}`, green: `${prev.color.green + keyboardKey}`, blue: `${prev.color.blue}` }}\n          })\n        } else if (inputId === \"enterBlue\") {\n          this.setState(prev => {\n            return { color: { red: `${prev.color.red}`, green: `${prev.color.green}`, blue: `${prev.color.blue + keyboardKey}` }}\n          })\n        }\n      }\n    } else if (keyboardKey === \"Backspace\") {\n        switch (inputId) {\n          case \"enterRed\":\n            return this.setState(prev => { return { color: { red: prev.color.red.slice(0, -1), green: prev.color.green, blue: prev.color.blue, }}});\n          case \"enterGreen\":\n            return this.setState(prev => { return { color: { red: prev.color.red, green: prev.color.green.slice(0, -1), blue: prev.color.blue, }}});\n          case \"enterBlue\":\n            return this.setState(prev => { return { color: { red: prev.color.red, green: prev.color.green, blue: prev.color.blue.slice(0, -1), }}});\n          default:\n            return null;\n        }\n      }\n  };\n  render() {\n    let rgb = `rgb(${this.state.color.red},${this.state.color.green},${this.state.color.blue})`;\n    return (\n      <main style={{ backgroundColor: rgb }}>\n        <form>\n          <div>\n            <input\n            type=\"text\"\n            key=\"enterRed\"\n            id=\"enterRed\"\n            value={ this.state.color.red }\n            onKeyDown={ this.handleKeyDown }\n            onChange={() => {}}/>\n\n            <input\n            type=\"text\"\n            key=\"enterGreen\"\n            id=\"enterGreen\"\n            value={ this.state.color.green }\n            onKeyDown={ this.handleKeyDown }\n            onChange={() => {}}/>\n            \n            <input\n            type=\"text\"\n            key=\"enterBlue\"\n            id=\"enterBlue\"\n            value={ this.state.color.blue }\n            onKeyDown={ this.handleKeyDown }\n            onChange={() => {}}/>\n          </div>\n\n          <button\n          type=\"button\"\n          onClick={ this.handleClick }>random</button>\n          \n          <div>\n            <input\n            type=\"range\"\n            value={ this.state.color.red }\n            id=\"red\"\n            min=\"0\"\n            max=\"255\"\n            onChange={ this.rangeInput } />\n\n            <input\n            type=\"range\"\n            value={ this.state.color.green }\n            id=\"green\"\n            min=\"0\"\n            max=\"255\"\n            onChange={ this.rangeInput } />\n\n            <input\n            type=\"range\"\n            value={ this.state.color.blue }\n            id=\"blue\"\n            min=\"0\"\n            max=\"255\"\n            onChange={ this.rangeInput } />\n          </div>\n        </form>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}